{"version":3,"file":"static/js/login-page.b5d9bc57.chunk.js","mappings":"4NAgBA,MAZA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAOjB,MAAO,CAAEC,aALY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC7BN,GAASO,EAAAA,EAAAA,IAAU,CAAEF,MAAAA,EAAOC,SAAAA,KAC5BJ,EAAS,YACV,EAGF,E,oBCVc,SAASM,IACtB,IAAQJ,EAAiBK,IAAjBL,aAER,OACE,iCACE,mCAEA,SAAC,KAAD,CACEM,cAAe,CAAEL,MAAO,GAAIC,SAAU,IACtCK,SAAUP,EACVQ,iBAAkBC,EAAAA,GAHpB,SAKG,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,aAAcC,EAAvC,EAAuCA,aAAvC,OACC,UAAC,KAAD,CAAMN,SAAUK,EAAhB,WACE,8BACE,mDACA,SAAC,KAAD,CACEE,KAAK,QACLC,KAAK,QACLC,SAAUL,EACVM,MAAOP,EAAOT,SAEhB,SAAC,KAAD,CAAcc,KAAK,QAAQG,OAAQ,SAAAC,GAAO,OAAI,uBAAIA,GAAR,QAE5C,8BACE,8CACA,SAAC,KAAD,CACEL,KAAK,WACLC,KAAK,WACLC,SAAUL,EACVM,MAAOP,EAAOR,YAEhB,SAAC,KAAD,CACEa,KAAK,WACLG,OAAQ,SAAAC,GAAO,OAAI,uBAAIA,GAAR,QAGnB,mBAAQL,KAAK,SAAb,SAAuBD,EAAe,MAAQ,YAzBjD,MA+BR,CCpCD,MARA,WACE,OAEE,SAAC,EAAD,GAGH,C,sHCPYO,EAAgBC,EAAAA,GAAW,CACtCN,KAAMM,EAAAA,KAAaC,IAAI,GAAGC,IAAI,IAAIC,WAClCC,OAAQJ,EAAAA,KAAaC,IAAI,GAAGE,aAGjBf,EAAkBY,EAAAA,GAAW,CACxCpB,MAAOoB,EAAAA,KAAaG,WAAWvB,QAC/BC,SAAUmB,EAAAA,KAAaG,WAAWF,IAAI,GAAGC,IAAI,MAGlCG,EAAqBL,EAAAA,GAAW,CAC3CN,KAAMM,EAAAA,KAAaG,WAAWF,IAAI,GAAGC,IAAI,IACzCtB,MAAOoB,EAAAA,KAAaG,WAAWvB,QAC/BC,SAAUmB,EAAAA,KAAaG,WAAWF,IAAI,GAAGC,IAAI,K","sources":["hooks/loginUser.js","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx","utils/validationSchema.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { loginUser } from 'redux/auth/operations';\n\nfunction useLoginUser() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const onSubmitForm = ({ email, password }) => {\n    dispatch(loginUser({ email, password }));\n    navigate('/contacts');\n  };\n\n  return { onSubmitForm };\n}\n\nexport default useLoginUser;\n","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport useLoginUser from 'hooks/loginUser';\nimport { userLoginSchema } from 'utils/validationSchema';\n\nexport default function RegisterForm() {\n  const { onSubmitForm } = useLoginUser();\n\n  return (\n    <>\n      <h2>Login</h2>\n\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        onSubmit={onSubmitForm}\n        validationSchema={userLoginSchema}\n      >\n        {({ values, handleChange, handleSubmit, isSubmitting }) => (\n          <Form onSubmit={handleSubmit}>\n            <label>\n              <span>Your e-mail adress?</span>\n              <Field\n                type=\"email\"\n                name=\"email\"\n                onChange={handleChange}\n                value={values.email}\n              />\n              <ErrorMessage name=\"email\" render={message => <p>{message}</p>} />\n            </label>\n            <label>\n              <span>Your password?</span>\n              <Field\n                type=\"password\"\n                name=\"password\"\n                onChange={handleChange}\n                value={values.password}\n              />\n              <ErrorMessage\n                name=\"password\"\n                render={message => <p>{message}</p>}\n              />\n            </label>\n            <button type=\"submit\">{isSubmitting ? '...' : 'Login'}</button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n","// import Container from 'components/Container';\nimport LoginForm from 'components/LoginForm';\n\nfunction LoginPage() {\n  return (\n    // <Container>\n    <LoginForm />\n    // </Container>\n  );\n}\n\nexport default LoginPage;\n","import * as yup from 'yup';\n\nexport const contactSchema = yup.object({\n  name: yup.string().min(3).max(20).required(),\n  number: yup.number().min(3).required(),\n});\n\nexport const userLoginSchema = yup.object({\n  email: yup.string().required().email(),\n  password: yup.string().required().min(7).max(14),\n});\n\nexport const userRegisterSchema = yup.object({\n  name: yup.string().required().min(3).max(30),\n  email: yup.string().required().email(),\n  password: yup.string().required().min(7).max(14),\n});\n"],"names":["dispatch","useDispatch","navigate","useNavigate","onSubmitForm","email","password","loginUser","RegisterForm","useLoginUser","initialValues","onSubmit","validationSchema","userLoginSchema","values","handleChange","handleSubmit","isSubmitting","type","name","onChange","value","render","message","contactSchema","yup","min","max","required","number","userRegisterSchema"],"sourceRoot":""}