{"version":3,"file":"static/js/login-page.52e19590.chunk.js","mappings":"4NAgBA,MAZA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAOjB,MAAO,CAAEC,aALY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC7BN,GAASO,EAAAA,EAAAA,IAAU,CAAEF,MAAAA,EAAOC,SAAAA,KAC5BJ,EAAS,YACV,EAGF,E,uCCbD,EAAuB,wBAAvB,EAAuD,yBAAvD,EAAwF,yBAAxF,EAAyH,yBAAzH,EAAwJ,uB,UCSzI,SAASM,IACtB,IAAQJ,EAAiBK,IAAjBL,aACFF,GAAWC,EAAAA,EAAAA,MACXO,GAAOC,EAAAA,EAAAA,WAAS,GAEtB,OACE,+BACE,UAACC,EAAA,EAAD,CAAOF,KAAMA,EAAMG,OAAQ,kBAAMX,EAAS,IAAf,EAA3B,WACE,SAACU,EAAA,SAAD,CAAcE,aAAW,EAAzB,UACE,SAACF,EAAA,QAAD,uBAEF,SAACA,EAAA,OAAD,WACE,SAAC,KAAD,CACEG,cAAe,CAAEV,MAAO,GAAIC,SAAU,IACtCU,SAAUZ,EACVa,iBAAkBC,EAAAA,GAHpB,SAKG,gBAAGb,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUa,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,aAAlC,OACC,UAAC,KAAD,CAAMC,UAAWC,EAAaN,SAAUI,EAAxC,WACE,mBAAOC,UAAWC,EAAlB,WACE,iBAAMD,UAAWC,EAAjB,kCACA,SAAC,KAAD,CACED,UAAWC,EACXC,KAAK,QACLC,KAAK,QACLC,SAAUN,EACVO,MAAOrB,KAET,SAAC,KAAD,CACEmB,KAAK,QACLG,OAAQ,SAAAC,GAAO,OAAI,cAAGP,UAAWC,EAAd,SAA2BM,GAA/B,QAGnB,mBAAOP,UAAWC,EAAlB,WACE,iBAAMD,UAAWC,EAAjB,6BACA,SAAC,KAAD,CACED,UAAWC,EACXC,KAAK,WACLC,KAAK,WACLC,SAAUN,EACVO,MAAOpB,KAET,SAAC,KAAD,CACEkB,KAAK,WACLG,OAAQ,SAAAC,GAAO,OAAI,cAAGP,UAAWC,EAAd,SAA2BM,GAA/B,QAGnB,SAAChB,EAAA,SAAD,WACE,SAACiB,EAAA,EAAD,CACEC,QAAQ,UACRC,QAASX,EACTG,KAAK,SAHP,uBA/BL,UA8CZ,CC9DD,MARA,WACE,OAEE,SAACf,EAAD,GAGH,C,sHCPYwB,EAAgBC,EAAAA,GAAW,CACtCT,KAAMS,EAAAA,KAAaC,IAAI,GAAGC,IAAI,IAAIC,WAClCC,OAAQJ,EAAAA,KAAaC,IAAI,GAAGE,aAGjBlB,EAAkBe,EAAAA,GAAW,CACxC5B,MAAO4B,EAAAA,KAAa5B,QAAQ+B,WAC5B9B,SAAU2B,EAAAA,KAAaC,IAAI,GAAGC,IAAI,IAAIC,aAG3BE,EAAqBL,EAAAA,GAAW,CAC3CT,KAAMS,EAAAA,KAAaC,IAAI,GAAGC,IAAI,IAAIC,WAClC/B,MAAO4B,EAAAA,KAAa5B,QAAQ+B,WAC5B9B,SAAU2B,EAAAA,KAAaC,IAAI,GAAGC,IAAI,IAAIC,Y","sources":["hooks/useLoginUser.js","webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.scss?1c6d","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx","utils/validationSchema.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { loginUser } from 'redux/auth/operations';\n\nfunction useLoginUser() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const onSubmitForm = ({ email, password }) => {\n    dispatch(loginUser({ email, password }));\n    navigate('/contacts');\n  };\n\n  return { onSubmitForm };\n}\n\nexport default useLoginUser;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__Kx5pU\",\"Label\":\"LoginForm_Label__3yyee\",\"Input\":\"LoginForm_Input__b-RD3\",\"Title\":\"LoginForm_Title__C-XRH\",\"ErM\":\"LoginForm_ErM__58nXb\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport useLoginUser from 'hooks/useLoginUser';\nimport { userLoginSchema } from 'utils/validationSchema';\nimport { useNavigate } from 'react-router-dom';\n\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport styles from './LoginForm.module.scss';\n\nexport default function LoginForm() {\n  const { onSubmitForm } = useLoginUser();\n  const navigate = useNavigate();\n  const show = useState(true);\n\n  return (\n    <>\n      <Modal show={show} onHide={() => navigate('/')}>\n        <Modal.Header closeButton>\n          <Modal.Title>Login</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Formik\n            initialValues={{ email: '', password: '' }}\n            onSubmit={onSubmitForm}\n            validationSchema={userLoginSchema}\n          >\n            {({ email, password, handleChange, handleSubmit }) => (\n              <Form className={styles.form} onSubmit={handleSubmit}>\n                <label className={styles.Label}>\n                  <span className={styles.Title}>Your e-mail adress?</span>\n                  <Field\n                    className={styles.Input}\n                    type=\"email\"\n                    name=\"email\"\n                    onChange={handleChange}\n                    value={email}\n                  />\n                  <ErrorMessage\n                    name=\"email\"\n                    render={message => <p className={styles.ErM}>{message}</p>}\n                  />\n                </label>\n                <label className={styles.Label}>\n                  <span className={styles.Title}>Your password?</span>\n                  <Field\n                    className={styles.Input}\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={handleChange}\n                    value={password}\n                  />\n                  <ErrorMessage\n                    name=\"password\"\n                    render={message => <p className={styles.ErM}>{message}</p>}\n                  />\n                </label>\n                <Modal.Footer>\n                  <Button\n                    variant=\"primary\"\n                    onClick={handleSubmit}\n                    type=\"submit\"\n                  >\n                    Login\n                  </Button>\n                </Modal.Footer>\n              </Form>\n            )}\n          </Formik>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n","// import Container from 'components/Container';\nimport LoginForm from 'components/LoginForm';\n\nfunction LoginPage() {\n  return (\n    // <Container>\n    <LoginForm />\n    // </Container>\n  );\n}\n\nexport default LoginPage;\n","import * as yup from 'yup';\n\nexport const contactSchema = yup.object({\n  name: yup.string().min(3).max(20).required(),\n  number: yup.number().min(3).required(),\n});\n\nexport const userLoginSchema = yup.object({\n  email: yup.string().email().required(),\n  password: yup.string().min(7).max(14).required(),\n});\n\nexport const userRegisterSchema = yup.object({\n  name: yup.string().min(3).max(30).required(),\n  email: yup.string().email().required(),\n  password: yup.string().min(7).max(14).required(),\n});\n"],"names":["dispatch","useDispatch","navigate","useNavigate","onSubmitForm","email","password","loginUser","LoginForm","useLoginUser","show","useState","Modal","onHide","closeButton","initialValues","onSubmit","validationSchema","userLoginSchema","handleChange","handleSubmit","className","styles","type","name","onChange","value","render","message","Button","variant","onClick","contactSchema","yup","min","max","required","number","userRegisterSchema"],"sourceRoot":""}