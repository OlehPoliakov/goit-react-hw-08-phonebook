{"version":3,"file":"static/js/register-page.ed2b21ee.chunk.js","mappings":"8NAgBA,MAZA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAOjB,MAAO,CAAEC,aALY,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACnCP,GAASQ,EAAAA,EAAAA,IAAa,CAAEH,KAAAA,EAAMC,MAAAA,EAAOC,SAAAA,KACrCL,EAAS,YACV,EAGF,E,oBCVc,SAASO,IACtB,IAAQL,EAAiBM,IAAjBN,aAER,OACE,iCACE,0CAEA,SAAC,KAAD,CACEO,cAAe,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAChDK,SAAUR,EACVS,iBAAkBC,EAAAA,GAHpB,SAKG,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,aAAcC,EAAvC,EAAuCA,aAAvC,OACC,UAAC,KAAD,CAAMN,SAAUK,EAAhB,WACE,8BACE,kDACA,SAAC,KAAD,CACEE,KAAK,OACLd,KAAK,OACLe,SAAUJ,EACVK,MAAON,EAAOV,QAEhB,SAAC,KAAD,CACEA,KAAK,SACLiB,OAAQ,SAAAC,GAAO,OAAI,uBAAIA,GAAR,QAGnB,8BACE,mDACA,SAAC,KAAD,CACEJ,KAAK,QACLd,KAAK,QACLe,SAAUJ,EACVK,MAAON,EAAOT,SAEhB,SAAC,KAAD,CACED,KAAK,SACLiB,OAAQ,SAAAC,GAAO,OAAI,uBAAIA,GAAR,QAGnB,8BACE,kDACA,SAAC,KAAD,CACEJ,KAAK,WACLd,KAAK,WACLe,SAAUJ,EACVK,MAAON,EAAOR,YAEhB,SAAC,KAAD,CACEF,KAAK,SACLiB,OAAQ,SAAAC,GAAO,OAAI,uBAAIA,GAAR,QAGnB,mBAAQJ,KAAK,SAAb,SACGD,EAAe,MAAQ,mBA1C7B,MAiDR,CCtDD,MARA,WACE,OAEE,SAACT,EAAD,GAGH,C,sHCPYe,EAAgBC,EAAAA,GAAW,CACtCpB,KAAMoB,EAAAA,KAAaC,IAAI,GAAGC,IAAI,IAAIC,WAClCC,OAAQJ,EAAAA,KAAaC,IAAI,GAAGE,aAGjBE,EAAkBL,EAAAA,GAAW,CACxCnB,MAAOmB,EAAAA,KAAaG,WAAWtB,QAC/BC,SAAUkB,EAAAA,KAAaG,WAAWF,IAAI,GAAGC,IAAI,MAGlCb,EAAqBW,EAAAA,GAAW,CAC3CpB,KAAMoB,EAAAA,KAAaG,WAAWF,IAAI,GAAGC,IAAI,IACzCrB,MAAOmB,EAAAA,KAAaG,WAAWtB,QAC/BC,SAAUkB,EAAAA,KAAaG,WAAWF,IAAI,GAAGC,IAAI,K","sources":["hooks/registerUser.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx","utils/validationSchema.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { registerUser } from 'redux/auth/operations';\n\nfunction useRegistrUser() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const onSubmitForm = ({ name, email, password }) => {\n    dispatch(registerUser({ name, email, password }));\n    navigate('/contacts');\n  };\n\n  return { onSubmitForm };\n}\n\nexport default useRegistrUser;\n","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport useRegistrUser from 'hooks/registerUser';\nimport { userRegisterSchema } from 'utils/validationSchema';\n\nexport default function RegisterForm() {\n  const { onSubmitForm } = useRegistrUser();\n\n  return (\n    <>\n      <h2>Registration</h2>\n\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        onSubmit={onSubmitForm}\n        validationSchema={userRegisterSchema}\n      >\n        {({ values, handleChange, handleSubmit, isSubmitting }) => (\n          <Form onSubmit={handleSubmit}>\n            <label>\n              <span>What is your name?</span>\n              <Field\n                type=\"text\"\n                name=\"name\"\n                onChange={handleChange}\n                value={values.name}\n              />\n              <ErrorMessage\n                name=\"number\"\n                render={message => <p>{message}</p>}\n              />\n            </label>\n            <label>\n              <span>Your e-mail adress?</span>\n              <Field\n                type=\"email\"\n                name=\"email\"\n                onChange={handleChange}\n                value={values.email}\n              />\n              <ErrorMessage\n                name=\"number\"\n                render={message => <p>{message}</p>}\n              />\n            </label>\n            <label>\n              <span>Create a password.</span>\n              <Field\n                type=\"password\"\n                name=\"password\"\n                onChange={handleChange}\n                value={values.password}\n              />\n              <ErrorMessage\n                name=\"number\"\n                render={message => <p>{message}</p>}\n              />\n            </label>\n            <button type=\"submit\">\n              {isSubmitting ? '...' : 'Registration'}\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n","// import Container from 'components/Container';\nimport RegisterForm from 'components/RegisterForm';\n\nfunction RegisterPage() {\n  return (\n    // <Container>\n    <RegisterForm />\n    // </Container>\n  );\n}\n\nexport default RegisterPage;\n","import * as yup from 'yup';\n\nexport const contactSchema = yup.object({\n  name: yup.string().min(3).max(20).required(),\n  number: yup.number().min(3).required(),\n});\n\nexport const userLoginSchema = yup.object({\n  email: yup.string().required().email(),\n  password: yup.string().required().min(7).max(14),\n});\n\nexport const userRegisterSchema = yup.object({\n  name: yup.string().required().min(3).max(30),\n  email: yup.string().required().email(),\n  password: yup.string().required().min(7).max(14),\n});\n"],"names":["dispatch","useDispatch","navigate","useNavigate","onSubmitForm","name","email","password","registerUser","RegisterForm","useRegistrUser","initialValues","onSubmit","validationSchema","userRegisterSchema","values","handleChange","handleSubmit","isSubmitting","type","onChange","value","render","message","contactSchema","yup","min","max","required","number","userLoginSchema"],"sourceRoot":""}