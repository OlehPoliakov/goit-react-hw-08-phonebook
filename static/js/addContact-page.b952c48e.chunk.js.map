{"version":3,"file":"static/js/addContact-page.b952c48e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/GoBack/GoBack.module.scss?f14c","components/GoBack/GoBack.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.scss?6b75","components/ContactForm/ContactForm.jsx","hooks/useCreateNewContact.js","pages/AddContactPage.jsx","utils/validationSchema.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"GoBack_Button__JkEh-\",\"Label\":\"GoBack_Label__wREDN\"};","import PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaLongArrowAltLeft } from 'react-icons/fa';\nimport styles from './GoBack.module.scss';\n\nfunction GoBack({ text, path }) {\n  const navigate = useNavigate();\n  const goToPage = () => navigate(path);\n\n  return (\n    <Button className={styles.Button} type=\"button\" onClick={goToPage}>\n      <FaLongArrowAltLeft />\n      <span className={styles.Label}>{text}</span>\n    </Button>\n  );\n}\n\nGoBack.propTypes = {\n  text: PropTypes.string,\n  path: PropTypes.string,\n};\n\nexport default GoBack;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__zqkUM\",\"Label\":\"ContactForm_Label__bcOrV\",\"Input\":\"ContactForm_Input__LESLa\",\"Title\":\"ContactForm_Title__WvXtn\",\"ErM\":\"ContactForm_ErM__NWA6P\"};","import Button from 'react-bootstrap/Button';\nimport { BsFillPersonPlusFill } from 'react-icons/bs';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport Container from 'components/Container';\nimport GoBack from 'components/GoBack';\nimport styles from './ContactForm.module.scss';\n\nexport default function ContactForm({\n  initialValues,\n  onSubmitForm,\n  validationSchema,\n  buttonLabel,\n}) {\n  return (\n    <Container>\n      <GoBack text=\"Contact list\" path=\"/contacts\" />\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmitForm}\n      >\n        {({ name, number, handleChange, handleSubmit, isSubmitting }) => (\n          <Form className={styles.form} onSubmit={handleSubmit}>\n            <label className={styles.Label}>\n              <span className={styles.Title}>Name</span>\n              <Field\n                className={styles.Input}\n                type=\"text\"\n                name=\"name\"\n                onChange={handleChange}\n                placeholder=\"Volodymyr Zelenskyy\"\n                value={name}\n                required\n              />\n              <ErrorMessage\n                name=\"name\"\n                render={message => <p className={styles.ErM}>{message}</p>}\n              />\n            </label>\n            <label className={styles.Label}>\n              <span className={styles.Title}>Number</span>\n              <Field\n                className={styles.Input}\n                type=\"tel\"\n                name=\"number\"\n                onChange={handleChange}\n                placeholder=\"937-99-92\"\n                value={number}\n                required\n              />\n              <ErrorMessage\n                name=\"number\"\n                render={message => <p className={styles.ErM}>{message}</p>}\n              />\n            </label>\n            <Button\n              variant=\"outline-primary\"\n              type=\"submit\"\n              disabled={isSubmitting}\n            >\n              <BsFillPersonPlusFill size={20} />\n              {isSubmitting ? '...' : buttonLabel}\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Container>\n  );\n}\n","import { useNavigate } from 'react-router-dom';\nimport {\n  useCreateContactMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/api';\nimport { Report } from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction useCreateNewContact(data) {\n  const navigate = useNavigate();\n\n  const [createContact] = useCreateContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n\n  const onSubmitForm = data => {\n    contacts.some(contact => contact.name === data.name)\n      ? Report.warning(\n          `${data.name}`,\n          'This user is already in the contact list.',\n          'OK'\n        )\n      : createContact(data);\n\n    navigate('/contacts');\n\n    Notify.success(`The ${data.name} has been added to your contact list.`);\n  };\n\n  return onSubmitForm;\n}\n\nexport default useCreateNewContact;\n","import ContactForm from 'components/ContactForm';\nimport useCreateNewContact from 'hooks/useCreateNewContact';\nimport { contactSchema } from 'utils/validationSchema';\n\nfunction AddContactPage() {\n  const initialValues = { name: '', number: '' };\n  const newContact = useCreateNewContact();\n\n  return (\n    <ContactForm\n      title=\"Add new contact\"\n      initialValues={initialValues}\n      onSubmitForm={newContact}\n      validationSchema={contactSchema}\n      buttonLabel=\"Add contact\"\n    />\n  );\n}\n\nexport default AddContactPage;\n","import * as yup from 'yup';\n\nexport const contactSchema = yup.object({\n  name: yup.string().min(3).max(20).required(),\n  number: yup.number().min(3).required(),\n});\n\nexport const userLoginSchema = yup.object({\n  email: yup.string().email().required(),\n  password: yup.string().min(7).max(14).required(),\n});\n\nexport const userRegisterSchema = yup.object({\n  name: yup.string().min(3).max(30).required(),\n  email: yup.string().email().required(),\n  password: yup.string().min(7).max(14).required(),\n});\n"],"names":["text","path","navigate","useNavigate","Button","className","styles","type","onClick","ContactForm","initialValues","onSubmitForm","validationSchema","buttonLabel","Container","onSubmit","name","number","handleChange","handleSubmit","isSubmitting","onChange","placeholder","value","required","render","message","variant","disabled","size","data","useCreateContactMutation","createContact","contacts","useGetContactsQuery","some","contact","Report","Notify","newContact","useCreateNewContact","title","contactSchema","yup","min","max","userLoginSchema","email","password","userRegisterSchema"],"sourceRoot":""}