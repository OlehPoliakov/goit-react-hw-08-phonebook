{"version":3,"file":"static/js/login-page.7209d277.chunk.js","mappings":"uMACA,EAAwB,wBAAxB,EAAwD,wBAAxD,EAAwF,wBAAxF,EAAsH,sB,iCCAtH,EAAuB,uBCQR,SAASA,EAAT,GAKX,IAJFC,EAIC,EAJDA,aACAC,EAGC,EAHDA,cACAC,EAEC,EAFDA,iBACAC,EACC,EADDA,SAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,WAAS,GAEtB,OACE,+BACE,UAACC,EAAA,EAAD,CAAOF,KAAMA,EAAMG,OAAQ,kBAAML,EAAS,IAAf,EAA3B,WACE,SAACI,EAAA,SAAD,CAAcE,aAAW,EAAzB,UACE,SAACF,EAAA,QAAD,UAAcL,OAEhB,SAACK,EAAA,OAAD,WACE,SAAC,KAAD,CACEG,SAAUX,EACVC,cAAeA,EACfC,iBAAkBA,EAHpB,UAKE,UAAC,KAAD,CAAMU,UAAWC,EAAjB,UACGC,OAAOC,KAAKd,GAAee,KAAI,SAAAC,GAAG,OC5BlC,YAAwC,IAAnBC,EAAkB,EAAlBA,KAAMf,EAAY,EAAZA,SAiCxC,OACE,mBAAOS,UAAWC,EAAlB,WACE,iBAAMD,UAAWC,EAAjB,SAlBa,WACf,OAAQK,GACN,IAAK,OACH,MAAO,qBAET,IAAK,QACH,MAAO,sBAET,IAAK,WACH,MAAoB,UAAbf,EAAuB,iBAAmB,qBAEnD,QACE,MAAO,OAEZ,CAImCgB,MAChC,SAAC,KAAD,CAAOP,UAAWC,EAAcO,KAnCpB,WACd,OAAQF,GACN,IAAK,OASL,QACE,MAAO,OAPT,IAAK,QACH,MAAO,QAET,IAAK,WACH,MAAO,WAKZ,CAqByCG,GAAWH,KAAMA,KACvD,SAAC,KAAD,CACEA,KAAMA,EACNI,OAAQ,SAAAC,GAAO,OAAI,cAAGX,UAAWC,EAAd,SAA2BU,GAA/B,MALkBL,EASxC,CDdeM,CAAS,CAAEN,KAAMD,EAAKd,SAAAA,GADW,KAGnC,SAACK,EAAA,SAAD,WACE,SAACiB,EAAA,EAAD,CAAQC,QAAQ,UAAUN,KAAK,SAA/B,SACGjB,iBASlB,C,6GE7BD,MAZA,WACE,IAAMwB,GAAWC,EAAAA,EAAAA,MACXxB,GAAWC,EAAAA,EAAAA,MAOjB,MAAO,CAAEL,aALY,SAAC,GAAyB,IAAvB6B,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC7BH,GAASI,EAAAA,EAAAA,IAAU,CAAEF,MAAAA,EAAOC,SAAAA,KAC5B1B,EAAS,IACV,EAGF,E,oBCGD,MAbA,WACE,IAAQJ,EAAiBgC,IAAjBhC,aAER,OACE,SAACD,EAAA,EAAD,CACEC,aAAcA,EACdE,iBAAkB+B,EAAAA,GAClBhC,cAAe,CAAE4B,MAAO,GAAIC,SAAU,IACtC3B,SAAS,SAGd,C,sHCbY+B,EAAgBC,EAAAA,GAAW,CACtCjB,KAAMiB,EAAAA,KAAaC,IAAI,GAAGC,IAAI,IAAIC,WAClCC,OAAQJ,EAAAA,KAAaC,IAAI,GAAGE,aAGjBL,EAAkBE,EAAAA,GAAW,CACxCN,MAAOM,EAAAA,KAAaN,QAAQS,WAC5BR,SAAUK,EAAAA,KAAaC,IAAI,GAAGC,IAAI,IAAIC,aAG3BE,EAAqBL,EAAAA,GAAW,CAC3CjB,KAAMiB,EAAAA,KAAaC,IAAI,GAAGC,IAAI,IAAIC,WAClCT,MAAOM,EAAAA,KAAaN,QAAQS,WAC5BR,SAAUK,EAAAA,KAAaC,IAAI,GAAGC,IAAI,IAAIC,Y","sources":["webpack://react-homework-template/./src/components/UserItem/UserItem.module.scss?59d0","webpack://react-homework-template/./src/components/UserForm/UserForm.module.scss?c142","components/UserForm/UserForm.jsx","components/UserItem/UserItem.jsx","hooks/useLoginUser.js","pages/LoginPage.jsx","utils/validationSchema.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Label\":\"UserItem_Label__PVMc+\",\"Input\":\"UserItem_Input__0mKR3\",\"Title\":\"UserItem_Title__egcqm\",\"ErM\":\"UserItem_ErM__ZnTNz\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"UserForm_form__RrSD5\"};","import { Formik, Form } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\n\nimport userItem from 'components/UserItem';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport styles from './UserForm.module.scss';\n\nexport default function UserForm({\n  onSubmitForm,\n  initialValues,\n  validationSchema,\n  formType,\n}) {\n  const navigate = useNavigate();\n  const show = useState(true);\n  // UserForm\n  return (\n    <>\n      <Modal show={show} onHide={() => navigate('/')}>\n        <Modal.Header closeButton>\n          <Modal.Title>{formType}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Formik\n            onSubmit={onSubmitForm}\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n          >\n            <Form className={styles.form}>\n              {Object.keys(initialValues).map(key =>\n                userItem({ name: key, formType })\n              )}\n              <Modal.Footer>\n                <Button variant=\"primary\" type=\"submit\">\n                  {formType}\n                </Button>\n              </Modal.Footer>\n            </Form>\n          </Formik>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n","import { Field, ErrorMessage } from 'formik';\nimport styles from './UserItem.module.scss';\n\nexport default function userInput({ name, formType }) {\n  const getType = () => {\n    switch (name) {\n      case 'name':\n        return 'text';\n\n      case 'email':\n        return 'email';\n\n      case 'password':\n        return 'password';\n\n      default:\n        return 'text';\n    }\n  };\n\n  const getTitle = () => {\n    switch (name) {\n      case 'name':\n        return 'What is your name?';\n\n      case 'email':\n        return 'Your e-mail adress?';\n\n      case 'password':\n        return formType === 'login' ? 'Your password?' : 'Create a password!';\n\n      default:\n        return 'text';\n    }\n  };\n  // Input UserForm\n  return (\n    <label className={styles.Label} key={name}>\n      <span className={styles.Title}>{getTitle()}</span>\n      <Field className={styles.Input} type={getType()} name={name} />\n      <ErrorMessage\n        name={name}\n        render={message => <p className={styles.ErM}>{message}</p>}\n      />\n    </label>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { loginUser } from 'redux/auth/operations';\n\nfunction useLoginUser() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const onSubmitForm = ({ email, password }) => {\n    dispatch(loginUser({ email, password }));\n    navigate('/');\n  };\n\n  return { onSubmitForm };\n}\n\nexport default useLoginUser;\n","import UserForm from 'components/UserForm';\nimport useLoginUser from 'hooks/useLoginUser';\nimport { userLoginSchema } from 'utils/validationSchema';\n\nfunction LoginPage() {\n  const { onSubmitForm } = useLoginUser();\n\n  return (\n    <UserForm\n      onSubmitForm={onSubmitForm}\n      validationSchema={userLoginSchema}\n      initialValues={{ email: '', password: '' }}\n      formType=\"login\"\n    />\n  );\n}\n\nexport default LoginPage;\n","import * as yup from 'yup';\n\nexport const contactSchema = yup.object({\n  name: yup.string().min(3).max(20).required(),\n  number: yup.number().min(3).required(),\n});\n\nexport const userLoginSchema = yup.object({\n  email: yup.string().email().required(),\n  password: yup.string().min(7).max(14).required(),\n});\n\nexport const userRegisterSchema = yup.object({\n  name: yup.string().min(3).max(30).required(),\n  email: yup.string().email().required(),\n  password: yup.string().min(7).max(14).required(),\n});\n"],"names":["UserForm","onSubmitForm","initialValues","validationSchema","formType","navigate","useNavigate","show","useState","Modal","onHide","closeButton","onSubmit","className","styles","Object","keys","map","key","name","getTitle","type","getType","render","message","userItem","Button","variant","dispatch","useDispatch","email","password","loginUser","useLoginUser","userLoginSchema","contactSchema","yup","min","max","required","number","userRegisterSchema"],"sourceRoot":""}