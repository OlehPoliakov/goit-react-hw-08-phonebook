{"version":3,"file":"static/js/addContact-page.9e25a8ca.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/GoBack/GoBack.module.scss?f14c","components/GoBack/GoBack.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.scss?6b75","components/ContactForm/ContactForm.jsx","hooks/createNewContact.js","pages/AddContactPage/AddContactPage.jsx","utils/validationSchema.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"GoBack_Button__JkEh-\",\"Label\":\"GoBack_Label__wREDN\"};","import PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FaLongArrowAltLeft } from 'react-icons/fa';\nimport styles from './GoBack.module.scss';\n\nfunction GoBack({ text, path }) {\n  const navigate = useNavigate();\n  const goToPage = () => navigate(path);\n\n  return (\n    <Button className={styles.Button} type=\"button\" onClick={goToPage}>\n      <FaLongArrowAltLeft />\n      <span className={styles.Label}>{text}</span>\n    </Button>\n  );\n}\n\nGoBack.propTypes = {\n  text: PropTypes.string,\n  path: PropTypes.string,\n};\n\nexport default GoBack;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__zqkUM\",\"Label\":\"ContactForm_Label__bcOrV\",\"Input\":\"ContactForm_Input__LESLa\",\"Title\":\"ContactForm_Title__WvXtn\",\"ErM\":\"ContactForm_ErM__NWA6P\"};","import Button from 'react-bootstrap/Button';\nimport { BsFillPersonPlusFill } from 'react-icons/bs';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport GoBack from 'components/GoBack';\nimport styles from './ContactForm.module.scss';\n\nexport default function ContactForm({\n  title,\n  initialValues,\n  onSubmitForm,\n  validationSchema,\n  buttonLabel,\n}) {\n  return (\n    <>\n      <GoBack text=\"Contact list\" path=\"/contacts\" />\n      <p>{title}</p>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmitForm}\n      >\n        {({ values, handleChange, handleSubmit, isSubmitting }) => (\n          <Form className={styles.form} onSubmit={handleSubmit}>\n            <label className={styles.Label}>\n              <span className={styles.Title}>Name</span>\n              <Field\n                className={styles.Input}\n                type=\"text\"\n                name=\"name\"\n                onChange={handleChange}\n                placeholder=\"Volodymyr Zelenskyy\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n                value={values.name}\n                required\n              />\n              <ErrorMessage\n                name=\"name\"\n                render={message => <p className={styles.ErM}>{message}</p>}\n              />\n            </label>\n            <label className={styles.Label}>\n              <span className={styles.Title}>Number</span>\n              <Field\n                className={styles.Input}\n                type=\"tel\"\n                name=\"number\"\n                onChange={handleChange}\n                placeholder=\"937-99-92\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                value={values.number}\n                required\n              />\n              <ErrorMessage\n                name=\"number\"\n                render={message => <p className={styles.ErM}>{message}</p>}\n              />\n            </label>\n            <Button\n              variant=\"outline-primary\"\n              type=\"submit\"\n              disabled={isSubmitting}\n            >\n              {isSubmitting ? '...' : buttonLabel}\n              <BsFillPersonPlusFill size={20} />\n              <p>Add contact</p>\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n","import { useNavigate } from 'react-router-dom';\nimport {\n  useCreateContactMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/api';\nimport { Report } from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction useCreateNewContact(data) {\n  const navigate = useNavigate();\n\n  const [createContact] = useCreateContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n\n  const onSubmitForm = data => {\n    contacts.some(contact => contact.name === data.name)\n      ? Report.warning(\n          `${data.name}`,\n          'This user is already in the contact list.',\n          'OK'\n        )\n      : createContact(data);\n\n    navigate('/contacts');\n\n    Notify.success(`The ${data.name} has been added to your contact list.`);\n  };\n\n  return onSubmitForm;\n}\n\nexport default useCreateNewContact;\n","import ContactForm from 'components/ContactForm';\nimport useCreateNewContact from 'hooks/createNewContact';\nimport { contactSchema } from 'utils/validationSchema';\n\nfunction AddContactPage() {\n  const initialValues = { name: '', number: '' };\n  const newContact = useCreateNewContact();\n\n  return (\n    <ContactForm\n      title=\"Add new contact\"\n      initialValues={initialValues}\n      onSubmitForm={newContact}\n      validationSchema={contactSchema}\n      buttonLabel=\"Add contact\"\n    />\n  );\n}\n\nexport default AddContactPage;\n","import * as yup from 'yup';\n\nexport const contactSchema = yup.object({\n  name: yup.string().min(3).max(20).required(),\n  number: yup.number().min(3).required(),\n});\n\nexport const userLoginSchema = yup.object({\n  email: yup.string().required().email(),\n  password: yup.string().required().min(7).max(14),\n});\n\nexport const userRegisterSchema = yup.object({\n  name: yup.string().required().min(3).max(30),\n  email: yup.string().required().email(),\n  password: yup.string().required().min(7).max(14),\n});\n"],"names":["text","path","navigate","useNavigate","Button","className","styles","type","onClick","ContactForm","title","initialValues","onSubmitForm","validationSchema","buttonLabel","onSubmit","values","handleChange","handleSubmit","isSubmitting","name","onChange","placeholder","value","required","render","message","number","variant","disabled","size","data","useCreateContactMutation","createContact","contacts","useGetContactsQuery","some","contact","Report","Notify","newContact","useCreateNewContact","contactSchema","yup","min","max","userLoginSchema","email","password","userRegisterSchema"],"sourceRoot":""}